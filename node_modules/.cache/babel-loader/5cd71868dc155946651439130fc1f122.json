{"ast":null,"code":"var _jsxFileName = \"/Users/javierpedroza/Desktop/habi-app/src/views/building/flats/flatsView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './flatsDesign.css';\nimport API from '../../../services/API';\nimport Countries from '../../../components/countries/countries';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Flat() {\n  _s();\n\n  const [buildings, setBuildings] = useState([]);\n  const [owners, setOwners] = useState([]);\n  const [numberFlat, setNumberFlat] = useState(\"\");\n  const [selectedOwner, setSelectedOwner] = useState(\"\");\n  const [selectedBuilding, setSelectedBuilding] = useState(\"\");\n  const [countriesList, setCountriesList] = useState([]);\n  useEffect(() => {\n    getInfo();\n    getBuildings();\n    getCountries();\n  }, []);\n\n  async function getInfo() {\n    const owners = await API.getOwners().then(res => {\n      console.log(res.data);\n      setOwners(res.data);\n    });\n  }\n\n  async function getBuildings() {\n    const buildingResult = await API.getBuildings(\"created\", 0).then(res => {\n      console.log(res.data);\n      setBuildings(res.data);\n    });\n  }\n\n  async function addFlats() {\n    const params = {\n      owner: selectedOwner,\n      building: selectedBuilding,\n      department: numberFlat\n    };\n    API.addFlat(params).then(res => {\n      alert(\"Flat register\");\n    }).catch(err => {\n      alert(\"Register Error\");\n    });\n    clearValues();\n  }\n\n  function clearValues() {\n    setSelectedOwner(\"\");\n    setNumberFlat(\"\");\n    setSelectedBuilding(\"\");\n  }\n\n  async function getCountries() {\n    const data = [];\n    await axios.get(\"https://restcountries.com/v2/all\").then(res => {\n      for (var x in res.data) {\n        data.push(res.data[x].name);\n      }\n\n      setCountriesList();\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => document.location = \"/buildings\",\n        children: \"Ir a Edificios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"building formBuilding\",\n        children: \"Registrar Departamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Ingresa el numero de departamento\",\n            type: \"text\",\n            value: numberFlat,\n            onChange: e => setNumberFlat(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), owners.message !== \"empty model\" && /*#__PURE__*/_jsxDEV(Form.Select, {\n            \"aria-label\": \"Default select example\",\n            value: selectedOwner,\n            onChange: e => setSelectedOwner(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Selecciona el usuario\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), owners.map(val => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: val.id,\n                children: val.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 31\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), owners.message === \"empty model\" && /*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              color: \"red\"\n            },\n            children: \"Registra un Nuevo Usuario\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), buildings.message !== \"empty model\" && /*#__PURE__*/_jsxDEV(Form.Select, {\n            \"aria-label\": \"Default select example\",\n            value: selectedBuilding,\n            onChange: e => setSelectedBuilding(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Selecciona el edificio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), buildings.map(val => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: val.id,\n                children: val.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 31\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), buildings.message === \"empty model\" && /*#__PURE__*/_jsxDEV(Form.Label, {\n            style: {\n              color: \"red\"\n            },\n            children: \"Registra un Nuevo Edificio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"building formBuilding\",\n        onClick: addFlats,\n        disabled: selectedOwner === \"\" || selectedBuilding === \"\" || numberFlat === \"\",\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Countries, {\n        countries_list: countriesList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Flat, \"ahhAM2RXBlFmhLyPWNBu/z7Y08c=\");\n\n_c = Flat;\nexport default Flat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flat\");","map":{"version":3,"sources":["/Users/javierpedroza/Desktop/habi-app/src/views/building/flats/flatsView.js"],"names":["React","useEffect","useState","Form","Card","API","Countries","axios","Flat","buildings","setBuildings","owners","setOwners","numberFlat","setNumberFlat","selectedOwner","setSelectedOwner","selectedBuilding","setSelectedBuilding","countriesList","setCountriesList","getInfo","getBuildings","getCountries","getOwners","then","res","console","log","data","buildingResult","addFlats","params","owner","building","department","addFlat","alert","catch","err","clearValues","get","x","push","name","document","location","e","target","value","message","map","val","id","color","address"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './flatsDesign.css';\nimport API from '../../../services/API';\nimport Countries from '../../../components/countries/countries';\nimport axios from 'axios';\n\n\nfunction Flat() {\n\n    const [buildings, setBuildings] = useState([])\n    const [owners, setOwners] = useState([])\n    const [numberFlat, setNumberFlat] = useState(\"\")\n    const [selectedOwner, setSelectedOwner] = useState(\"\")\n    const [selectedBuilding, setSelectedBuilding] = useState(\"\")\n    const [countriesList, setCountriesList] = useState([])\n\n\n    useEffect ( () => {\n        getInfo()\n        getBuildings()\n        getCountries()\n    }, []);\n\n    async function getInfo(){\n        const owners = await API.getOwners()\n        .then(res => {\n            console.log(res.data)\n            setOwners(res.data)\n        })\n    }\n\n    async function getBuildings(){\n        const buildingResult = await API.getBuildings(\"created\", 0)\n        .then(res => {\n            console.log(res.data)\n            setBuildings(res.data)\n        })\n    }\n\n    async function addFlats(){\n        const params = {\n            owner:selectedOwner,\n            building:selectedBuilding,\n            department:numberFlat\n        }\n        API.addFlat(params)\n        .then(res => {\n            alert(\"Flat register\")\n        })\n        .catch(err => {\n            alert(\"Register Error\")\n        })\n        clearValues()\n    }\n\n    function clearValues(){\n        setSelectedOwner(\"\")\n        setNumberFlat(\"\")\n        setSelectedBuilding(\"\")\n    }\n\n    async function getCountries(){\n        const data = []\n        await axios.get(\"https://restcountries.com/v2/all\")\n        .then(res => {\n            for (var x in res.data){\n                data.push(res.data[x].name)\n            }\n            setCountriesList()\n        })\n    }\n\n    return (\n        <>\n        <div>\n            <button onClick={() => document.location = \"/buildings\"}>Ir a Edificios</button>\n            <Card.Title className=\"building formBuilding\">Registrar Departamento</Card.Title>\n            <Form>\n                <Form.Group className=\"mb-3\">\n                    <Form.Control placeholder=\"Ingresa el numero de departamento\" type='text' value={numberFlat} onChange={e => setNumberFlat(e.target.value)}/>\n                    {owners.message !== \"empty model\" &&\n                    <Form.Select aria-label=\"Default select example\" value={selectedOwner} onChange={e => setSelectedOwner(e.target.value)}>\n                        <option>Selecciona el usuario</option>\n                        {owners.map((val) => {\n                            return (\n                              <option value={val.id}>{val.name}</option>\n                            )\n                        })}\n                    </Form.Select>\n                    }\n                    {owners.message === \"empty model\" &&\n                        <Form.Label style={{color:\"red\"}}>Registra un Nuevo Usuario</Form.Label>\n                    }\n                    {buildings.message !== \"empty model\" &&\n                    <Form.Select aria-label=\"Default select example\" value={selectedBuilding} onChange={e => setSelectedBuilding(e.target.value)}>\n                        <option>Selecciona el edificio</option>\n                        {buildings.map((val) => {\n                            return (\n                              <option value={val.id}>{val.address}</option>\n                            )\n                        })}\n                    </Form.Select>\n                    }\n                    {buildings.message === \"empty model\" &&\n                        <Form.Label style={{color:\"red\"}}>Registra un Nuevo Edificio</Form.Label>\n                    }\n                </Form.Group>\n            </Form>\n            <button className=\"building formBuilding\" onClick={addFlats}  disabled={selectedOwner === \"\" || selectedBuilding === \"\" || numberFlat === \"\"}\n            >Registrar</button>\n        </div>\n        <div>\n            <Countries\n            countries_list={countriesList}\n            />\n        </div>\n        </>\n    )\n}\nexport default Flat;\n\n"]},"metadata":{},"sourceType":"module"}
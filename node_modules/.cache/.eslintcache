[{"/Users/javierpedroza/Desktop/habi-app/src/index.js":"1","/Users/javierpedroza/Desktop/habi-app/src/reportWebVitals.js":"2","/Users/javierpedroza/Desktop/habi-app/src/App.js":"3","/Users/javierpedroza/Desktop/habi-app/src/views/building/buildingView.js":"4","/Users/javierpedroza/Desktop/habi-app/src/services/API.js":"5","/Users/javierpedroza/Desktop/habi-app/src/components/countries/countries.js":"6","/Users/javierpedroza/Desktop/habi-app/src/views/flats/flatsView.js":"7","/Users/javierpedroza/Desktop/Habi-frontEnd/src/index.js":"8","/Users/javierpedroza/Desktop/Habi-frontEnd/src/App.js":"9","/Users/javierpedroza/Desktop/Habi-frontEnd/src/reportWebVitals.js":"10","/Users/javierpedroza/Desktop/Habi-frontEnd/src/views/flats/flatsView.js":"11","/Users/javierpedroza/Desktop/Habi-frontEnd/src/views/building/buildingView.js":"12","/Users/javierpedroza/Desktop/Habi-frontEnd/src/services/API.js":"13","/Users/javierpedroza/Desktop/Habi-frontEnd/src/components/countries/countries.js":"14"},{"size":501,"mtime":1649127806148,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1648960798214,"results":"17","hashOfConfig":"16"},{"size":532,"mtime":1649195617763,"results":"18","hashOfConfig":"16"},{"size":6998,"mtime":1649193110270,"results":"19","hashOfConfig":"16"},{"size":1046,"mtime":1649143702404,"results":"20","hashOfConfig":"16"},{"size":782,"mtime":1649195654542,"results":"21","hashOfConfig":"16"},{"size":4320,"mtime":1649195845106,"results":"22","hashOfConfig":"16"},{"size":501,"mtime":1649127806148,"results":"23","hashOfConfig":"24"},{"size":532,"mtime":1649195617763,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1648960798214,"results":"26","hashOfConfig":"24"},{"size":4320,"mtime":1649195845106,"results":"27","hashOfConfig":"24"},{"size":6998,"mtime":1649193110270,"results":"28","hashOfConfig":"24"},{"size":1046,"mtime":1649143702404,"results":"29","hashOfConfig":"24"},{"size":782,"mtime":1649195654542,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1cl66i5",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19he3k0",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/javierpedroza/Desktop/habi-app/src/index.js",[],[],["77","78"],"/Users/javierpedroza/Desktop/habi-app/src/reportWebVitals.js",[],[],"/Users/javierpedroza/Desktop/habi-app/src/App.js",[],[],"/Users/javierpedroza/Desktop/habi-app/src/views/building/buildingView.js",["79","80","81"],[],"import React, {useEffect, useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport API from '../../services/API';\nimport './buildingDesign.css';\n\n\nfunction Building() {\n    const [buildingInfo, setBuildingInfo] = useState(\"startView\")\n    const [orderParam, setOrderParam] = useState(\"created\")\n    const [descending, setDescending] = useState(0)\n    const [deleteValue,setDeleteValue] = useState(\"\")\n    const [area, setArea] = useState(\"\")\n    const [rooms, setRooms] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [address, setAddress] = useState(\"\")\n    const [town, setTown] = useState(\"\")\n\n\n\n    useEffect ( () => {\n        getBuildings(orderParam, descending)\n    }, []);\n\n    \n    async function getBuildings(order, desc){\n        const buildingResult = await API.getBuildings(order, desc)\n        .then(res => {\n            console.log(res.data)\n            setBuildingInfo(res.data)\n        })\n    }\n    \n    function changeOrderValue(val){\n        if (val === \"0\" || val === \"1\"){\n            setDescending(val)\n            getBuildings(orderParam,val)\n        }\n        else{\n            setOrderParam(val)\n            getBuildings(val,descending)\n        }\n    }\n\n    async function deleteBuilding(){\n        const params = {building_id: deleteValue}\n        API.deleteBuilding(params)\n        .then(res => {\n            alert(\"Delete ok\")\n            getBuildings(orderParam, descending)\n\n        })\n        .catch(err => {\n            alert(\"Building doesnt exist.\")\n        })\n        setDeleteValue(\"\")\n    }\n\n    async function addBuilding(){\n        const params = {\n            area: area,\n            number_rooms:rooms,\n            price: price,\n            address: address,\n            town: town\n        }\n        API.addBuilding(params)\n        .then(res => {\n            alert(\"Building register\")\n            getBuildings(orderParam, descending)\n        })\n        .catch(err => {\n            alert(\"Register Error\")\n        })\n        clearValues()\n    }\n\n    function clearValues(){\n        setArea(\"\")\n        setRooms(\"\")\n        setPrice(\"\")\n        setAddress(\"\")\n        setTown(\"\")\n    }\n\n\n\n  return (\n    <>\n        <button onClick={() => document.location = \"/flats\"}>Ir a Departamentos</button>\n        {(buildingInfo.message !== \"empty model\"  && buildingInfo !== \"startView\") &&\n            <>\n\n                <div className='building'>\n                            <div style={{display:\"grid\"}}>\n                                <p>ordenado por: </p>\n                                <select value={orderParam} onChange={e => changeOrderValue(e.target.value)}>\n                                    <option value=\"town\">Localidad</option>\n                                    <option value=\"created\" >Fecha de creacion</option>\n                                </select><br/>\n                                <select value={descending} onChange={e => changeOrderValue(e.target.value)}>\n                                    <option value={1}>Ascendente</option>\n                                    <option value={0} >Descendente</option>\n                                </select>\n                            </div>  \n                            <table>\n                                <tr>\n                                <th>ID</th>\n                                <th>area(Metros)</th>\n                                <th>Cuartos</th>\n                                <th>Precio</th>\n                                <th>Localidad</th>\n                                <th>Direccion</th>\n                                <th>Registrado</th>\n                                </tr>\n                                {buildingInfo.map((val) => {\n                                return (\n                                    <tr>\n                                    <td>{val.id}</td>\n                                    <td>{val.area}</td>\n                                    <td>{val.number_rooms}</td>\n                                    <td>{val.price}</td>\n                                    <td>{val.town}</td>\n                                    <td>{val.address}</td>\n                                    <td>{val.created}</td>\n                                    </tr>\n                                )\n                                })}\n                            </table>\n                            <p>Mostrando: {buildingInfo.length} registros.</p>\n                            <div>\n                                <p>Eliminar Edificio: </p>\n                                <input \n                                placeholder='Ingresa el ID del edificio'\n                                type={\"number\"}\n                                value={deleteValue}\n                                onChange={e => setDeleteValue(e.target.value)}></input>\n                                <button\n                                style={{marginLeft:\"2rem\"}}\n                                disabled={deleteValue == \"\" || deleteValue < 1}\n                                onClick={deleteBuilding}>Eliminar</button>\n                            </div>\n                </div>\n            </>\n        }\n    <div>\n        <Card.Title className=\"building formBuilding\">Registrar Edificio</Card.Title>\n            <Form  className=\"building formBuilding\">\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Area del edificio (Metros)</Form.Label>\n                    <Form.Control placeholder=\"Ingresa el area\" type='number' value={area} onChange={e => setArea(e.target.value)}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Numero de cuartos</Form.Label>\n                    <Form.Control placeholder=\"Numero de cuartos\" type='number' value={rooms} onChange={e => setRooms(e.target.value)}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Precio</Form.Label>\n                    <Form.Control placeholder=\"Precio\" type='number' value={price} onChange={e => setPrice(e.target.value)}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Direccion</Form.Label>\n                    <Form.Control placeholder=\"Direccion\" type='text' value={address} onChange={e => setAddress(e.target.value)}/>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Localidad</Form.Label>\n                    <Form.Control placeholder=\"Localidad\" type='text' value={town} onChange={e => setTown(e.target.value)}/>\n                </Form.Group><br/>\n            </Form>\n            <button className=\"building formBuilding\" onClick={addBuilding}\n            disabled={area === \"\" || rooms === \"\" || price === \"\" || address === \"\" || town === \"\"}>Registrar</button>\n    </div>\n    </>\n  );\n}\n\nexport default Building;\n","/Users/javierpedroza/Desktop/habi-app/src/services/API.js",[],[],"/Users/javierpedroza/Desktop/habi-app/src/components/countries/countries.js",["82"],[],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './countries.scss';\n\nconst countries = props => (\n\t<div className=\"country\">\n      <table>\n        <tr>\n          <th>Nombre del Pais</th>\n        </tr>\n\t\t{props.countries_list.map((val) => {\n            return(\n\t\t\t\t<tr>\n\t\t\t\t\t<td>{val}</td>\n\t\t\t\t</tr>\n\t\t\t)\n        })}\n      </table>\n    </div>\n);\n\n// todo: Unless you need to use lifecycle methods or local state,\n// write your component in functional form as above and delete\n// this section. \n// class countries extends React.Component {\n//   render() {\n//     return <div>This is a component called countries.</div>;\n//   }\n// }\n\nconst CountriesPropTypes = {\n\t// always use prop types!\n};\n\ncountries.propTypes = CountriesPropTypes;\n\nexport default countries;\n","/Users/javierpedroza/Desktop/habi-app/src/views/flats/flatsView.js",["83","84","85"],[],"import React, {useEffect, useState} from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './flatsDesign.css';\nimport API from '../../services/API';\nimport Countries from '../../components/countries/countries';\nimport axios from 'axios';\n\n\nfunction Flat() {\n\n    const [buildings, setBuildings] = useState([])\n    const [owners, setOwners] = useState([])\n    const [numberFlat, setNumberFlat] = useState(\"\")\n    const [selectedOwner, setSelectedOwner] = useState(\"\")\n    const [selectedBuilding, setSelectedBuilding] = useState(\"\")\n    const [countriesList, setCountriesList] = useState([])\n\n\n    useEffect ( () => {\n        getInfo()\n        getBuildings()\n        getCountries()\n    }, []);\n\n    async function getInfo(){\n        const owners = await API.getOwners()\n        .then(res => {\n            console.log(res.data)\n            setOwners(res.data)\n        })\n    }\n\n    async function getBuildings(){\n        const buildingResult = await API.getBuildings(\"created\", 0)\n        .then(res => {\n            console.log(res.data)\n            setBuildings(res.data)\n        })\n    }\n\n    async function addFlats(){\n        const params = {\n            owner:selectedOwner,\n            building:selectedBuilding,\n            department:numberFlat\n        }\n        API.addFlat(params)\n        .then(res => {\n            alert(\"Flat register\")\n        })\n        .catch(err => {\n            alert(\"Register Error\")\n        })\n        clearValues()\n    }\n\n    function clearValues(){\n        setSelectedOwner(\"\")\n        setNumberFlat(\"\")\n        setSelectedBuilding(\"\")\n    }\n\n    async function getCountries(){\n        const data = []\n        await axios.get(\"https://restcountries.com/v2/all\")\n        .then(res => {\n            for (var x in res.data){\n                data.push(res.data[x].name)\n            }\n            setCountriesList(data)\n        })\n        .catch(err => {\n            getCountries()\n        })\n    }\n\n    return (\n        <>\n        <div>\n            <button onClick={() => document.location = \"/buildings\"}>Ir a Edificios</button>\n            <Card.Title className=\"building formBuilding\">Registrar Departamento</Card.Title>\n            <Form>\n                <Form.Group className=\"mb-3\">\n                    <Form.Control placeholder=\"Ingresa el numero de departamento\" type='text' value={numberFlat} onChange={e => setNumberFlat(e.target.value)}/>\n                    {owners.message !== \"empty model\" &&\n                    <Form.Select aria-label=\"Default select example\" value={selectedOwner} onChange={e => setSelectedOwner(e.target.value)}>\n                        <option>Selecciona el usuario</option>\n                        {owners.map((val) => {\n                            return (\n                              <option value={val.id}>{val.name}</option>\n                            )\n                        })}\n                    </Form.Select>\n                    }\n                    {owners.message === \"empty model\" &&\n                        <Form.Label style={{color:\"red\"}}>Registra un Nuevo Usuario</Form.Label>\n                    }\n                    {buildings.message !== \"empty model\" &&\n                    <Form.Select aria-label=\"Default select example\" value={selectedBuilding} onChange={e => setSelectedBuilding(e.target.value)}>\n                        <option>Selecciona el edificio</option>\n                        {buildings.map((val) => {\n                            return (\n                              <option value={val.id}>{val.address}</option>\n                            )\n                        })}\n                    </Form.Select>\n                    }\n                    {buildings.message === \"empty model\" &&\n                        <Form.Label style={{color:\"red\"}}>Registra un Nuevo Edificio</Form.Label>\n                    }\n                </Form.Group>\n            </Form>\n            <button className=\"building formBuilding\" onClick={addFlats}  disabled={selectedOwner === \"\" || selectedBuilding === \"\" || numberFlat === \"\"}\n            >Registrar</button>\n        </div>\n        <div>\n            <Countries\n            countries_list={countriesList}\n            />\n        </div>\n        </>\n    )\n}\nexport default Flat;\n\n","/Users/javierpedroza/Desktop/Habi-frontEnd/src/index.js",[],[],"/Users/javierpedroza/Desktop/Habi-frontEnd/src/App.js",[],[],"/Users/javierpedroza/Desktop/Habi-frontEnd/src/reportWebVitals.js",[],[],"/Users/javierpedroza/Desktop/Habi-frontEnd/src/views/flats/flatsView.js",["86","87","88"],[],"/Users/javierpedroza/Desktop/Habi-frontEnd/src/views/building/buildingView.js",["89","90","91"],[],"/Users/javierpedroza/Desktop/Habi-frontEnd/src/services/API.js",[],[],"/Users/javierpedroza/Desktop/Habi-frontEnd/src/components/countries/countries.js",["92"],[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":24,"column":8,"nodeType":"99","endLine":24,"endColumn":10,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":28,"column":15,"nodeType":"103","messageId":"104","endLine":28,"endColumn":29},{"ruleId":"105","severity":1,"message":"106","line":141,"column":55,"nodeType":"107","messageId":"108","endLine":141,"endColumn":57},{"ruleId":"101","severity":1,"message":"109","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":17},{"ruleId":"97","severity":1,"message":"110","line":25,"column":8,"nodeType":"99","endLine":25,"endColumn":10,"suggestions":"111"},{"ruleId":"101","severity":1,"message":"112","line":28,"column":15,"nodeType":"103","messageId":"104","endLine":28,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":36,"column":15,"nodeType":"103","messageId":"104","endLine":36,"endColumn":29},{"ruleId":"97","severity":1,"message":"110","line":25,"column":8,"nodeType":"99","endLine":25,"endColumn":10,"suggestions":"113"},{"ruleId":"101","severity":1,"message":"112","line":28,"column":15,"nodeType":"103","messageId":"104","endLine":28,"endColumn":21},{"ruleId":"101","severity":1,"message":"102","line":36,"column":15,"nodeType":"103","messageId":"104","endLine":36,"endColumn":29},{"ruleId":"97","severity":1,"message":"98","line":24,"column":8,"nodeType":"99","endLine":24,"endColumn":10,"suggestions":"114"},{"ruleId":"101","severity":1,"message":"102","line":28,"column":15,"nodeType":"103","messageId":"104","endLine":28,"endColumn":29},{"ruleId":"105","severity":1,"message":"106","line":141,"column":55,"nodeType":"107","messageId":"108","endLine":141,"endColumn":57},{"ruleId":"101","severity":1,"message":"109","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":17},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'descending' and 'orderParam'. Either include them or remove the dependency array.","ArrayExpression",["117"],"no-unused-vars","'buildingResult' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PropTypes' is defined but never used.","React Hook useEffect has a missing dependency: 'getCountries'. Either include it or remove the dependency array.",["118"],"'owners' is assigned a value but never used.",["119"],["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"123","fix":"125"},{"desc":"121","fix":"126"},"Update the dependencies array to be: [descending, orderParam]",{"range":"127","text":"128"},"Update the dependencies array to be: [getCountries]",{"range":"129","text":"130"},{"range":"131","text":"130"},{"range":"132","text":"128"},[798,800],"[descending, orderParam]",[784,786],"[getCountries]",[784,786],[798,800]]